// productsSlice.ts
import { createSlice, PayloadAction } from '@reduxjs/toolkit'; // Import createSlice to define a Redux slice and PayloadAction for typed actions
import { Product } from './types'; // Import the Product type for type safety

// Define the structure of the state for the products slice
interface ProductsState {
  products: Product[]; // Array of product objects
  searchQuery: string; // Current search query for filtering products
  sortOrder: string; // Current sort order (e.g., price-asc, price-desc)
  currentPage: number; // Current page for pagination
  itemsPerPage: number; // Number of items displayed per page
}

// Initialize the default state for the slice
const initialState: ProductsState = {
  products: [], // Start with an empty product list
  searchQuery: '', // Default search query is an empty string
  sortOrder: 'price-asc', // Default sort order is by price (low to high)
  currentPage: 1, // Start on the first page
  itemsPerPage: 8, // Default number of items displayed per page
};

// Create a slice for product-related state and actions
const productsSlice = createSlice({
  name: 'products', // Name of the slice
  initialState, // Initial state for this slice
  reducers: {
    // Reducer to update the current page for pagination
    setPage(state, action: PayloadAction<number>) {
      state.currentPage = action.payload; // Set the currentPage to the action payload
    },
    // Reducer to update the search query for filtering products
    setSearchQuery(state, action: PayloadAction<string>) {
      state.searchQuery = action.payload; // Set the searchQuery to the action payload
    },
    // Reducer to update the sort order for products
    setSortOrder(state, action: PayloadAction<string>) {
      state.sortOrder = action.payload; // Set the sortOrder to the action payload
    },
    // Reducer to set the entire products array (e.g., after fetching from an API)
    setProducts(state, action: PayloadAction<Product[]>) {
      state.products = action.payload; // Replace the current products array with the new one
    },
  },
});

// Export the actions generated by createSlice for use in components
export const { setPage, setSearchQuery, setSortOrder, setProducts } = productsSlice.actions;

// Export the reducer to integrate it into the Redux store
export default productsSlice.reducer;